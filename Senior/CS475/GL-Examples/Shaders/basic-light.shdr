///VERT
#version 150

precision highp float;

in vec3 position;
in vec3 normal;

uniform vec3 lightpos;
uniform vec3 vcolor;
uniform mat4 modelview;
uniform mat4 proj;

out vec3 color;

void main(void) {
  mat3 invtrans = transpose(inverse(mat3(modelview)));
  vec3 transnormal = normalize(invtrans * normal);

  float ambient = 0.3;
  float diffuse = max(0.0, dot(transnormal, normalize(lightpos)));

  color = (diffuse + ambient) * vcolor;

  gl_Position = proj * modelview * vec4(position, 1.0);

}

///FRAG
#version 150
precision highp float;

in vec3 color;

out vec4 fragcolor;

void main(void) {
  fragcolor = vec4(color,1.0);
}

///END
